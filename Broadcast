<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Football Live Stats - Field Display</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, Arial, sans-serif;
            background: linear-gradient(135deg, #1a4c3b 0%, #155432 100%);
            color: white;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .connection-setup {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
        }

        .ip-input-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 10px;
        }

        .ip-input {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 8px 12px;
            border-radius: 5px;
            width: 180px;
            margin-right: 10px;
        }

        .ip-input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .connect-btn {
            background: #155432;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
        }

        .connection-status {
            padding: 10px 20px;
            border-radius: 25px;
            font-weight: bold;
            text-align: center;
            backdrop-filter: blur(10px);
        }

        .connected {
            background: rgba(46, 204, 113, 0.9);
            color: white;
        }

        .disconnected {
            background: rgba(231, 76, 60, 0.9);
            color: white;
        }

        .connecting {
            background: rgba(255, 193, 7, 0.9);
            color: black;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .game-title {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .game-info {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .scoreboard {
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            gap: 20px;
            align-items: center;
            margin-bottom: 30px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 25px;
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .team {
            text-align: center;
        }

        .team-name {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .team-score {
            font-size: 4rem;
            font-weight: bold;
            color: #bdbb60;
            text-shadow: 2px 2px 8px rgba(0,0,0,0.3);
        }

        .game-clock {
            text-align: center;
            border-left: 2px solid rgba(255,255,255,0.3);
            border-right: 2px solid rgba(255,255,255,0.3);
            padding: 0 30px;
        }

        .quarter {
            font-size: 1.2rem;
            margin-bottom: 10px;
            opacity: 0.8;
        }

        .time {
            font-size: 3rem;
            font-weight: bold;
            font-family: 'Menlo', monospace;
        }

        .game-situation {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .situation-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            text-align: center;
            transition: transform 0.3s ease;
        }

        .situation-card:hover {
            transform: translateY(-5px);
        }

        .card-title {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .card-value {
            font-size: 2rem;
            font-weight: bold;
            color: #bdbb60;
        }

        .last-play {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 25px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 30px;
        }

        .last-play h3 {
            font-size: 1.3rem;
            margin-bottom: 15px;
            color: #bdbb60;
        }

        .play-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
        }

        .play-detail {
            text-align: center;
        }

        .play-detail-label {
            font-size: 0.8rem;
            opacity: 0.7;
            margin-bottom: 5px;
        }

        .play-detail-value {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .stats-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-top: 30px;
        }

        .team-stats {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 25px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stats-title {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 20px;
            text-align: center;
            color: #bdbb60;
        }

        .stat-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .stat-row:last-child {
            border-bottom: none;
        }

        .stat-label {
            font-size: 1rem;
        }

        .stat-value {
            font-size: 1.2rem;
            font-weight: bold;
        }

        @media (max-width: 768px) {
            .scoreboard {
                grid-template-columns: 1fr;
                text-align: center;
            }

            .game-clock {
                border: none;
                border-top: 2px solid rgba(255,255,255,0.3);
                border-bottom: 2px solid rgba(255,255,255,0.3);
                padding: 20px 0;
            }

            .stats-section {
                grid-template-columns: 1fr;
            }

            .team-score {
                font-size: 3rem;
            }

            .time {
                font-size: 2.5rem;
            }

            .ip-input-container {
                position: fixed;
                top: 10px;
                left: 10px;
                right: 10px;
            }
        }

        .loading {
            text-align: center;
            padding: 50px;
            font-size: 1.5rem;
            opacity: 0.7;
        }

        .error {
            background: rgba(231, 76, 60, 0.2);
            border: 1px solid rgba(231, 76, 60, 0.5);
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
            text-align: center;
        }

        .formation-display {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 20px;
            text-align: center;
        }

        .formation-title {
            font-size: 1.2rem;
            margin-bottom: 10px;
            color: #bdbb60;
        }

        .formation-info {
            font-size: 1.1rem;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="connection-setup">
        <div class="ip-input-container">
            <input type="text" class="ip-input" id="serverIP" placeholder="iPad IP (192.168.x.x)" value="">
            <button class="connect-btn" onclick="connect()">Connect</button>
        </div>
        <div class="connection-status disconnected" id="connectionStatus">
            Enter iPad IP Address Above
        </div>
    </div>

    <div class="container">
        <div class="header">
            <div class="game-title" id="gameTitle">Football Analytics Live</div>
            <div class="game-info" id="gameInfo">Enter iPad IP address and click Connect</div>
        </div>

        <div id="loadingMessage" class="loading">
            Ready to connect...
        </div>

        <div id="gameContent" style="display: none;">
            <div class="scoreboard">
                <div class="team">
                    <div class="team-name" id="teamName">Team</div>
                    <div class="team-score" id="teamScore">0</div>
                </div>
                
                <div class="game-clock">
                    <div class="quarter" id="quarter">Q1</div>
                    <div class="time" id="gameTime">15:00</div>
                </div>
                
                <div class="team">
                    <div class="team-name" id="opponentName">Opponent</div>
                    <div class="team-score" id="opponentScore">0</div>
                </div>
            </div>

            <div class="game-situation">
                <div class="situation-card">
                    <div class="card-title">Down & Distance</div>
                    <div class="card-value" id="downDistance">1st & 10</div>
                </div>
                <div class="situation-card">
                    <div class="card-title">Field Position</div>
                    <div class="card-value" id="fieldPosition">Own 25</div>
                </div>
                <div class="situation-card">
                    <div class="card-title">Possession</div>
                    <div class="card-value" id="possession">Team</div>
                </div>
            </div>

            <div class="formation-display" id="formationDisplay" style="display: none;">
                <div class="formation-title">Current Formation</div>
                <div class="formation-info" id="formationInfo">No formation data</div>
            </div>

            <div class="last-play" id="lastPlaySection" style="display: none;">
                <h3>Last Play</h3>
                <div class="play-details">
                    <div class="play-detail">
                        <div class="play-detail-label">Play Call</div>
                        <div class="play-detail-value" id="lastPlayCall">-</div>
                    </div>
                    <div class="play-detail">
                        <div class="play-detail-label">Result</div>
                        <div class="play-detail-value" id="lastPlayResult">-</div>
                    </div>
                    <div class="play-detail">
                        <div class="play-detail-label">Yards</div>
                        <div class="play-detail-value" id="lastPlayYards">0</div>
                    </div>
                    <div class="play-detail">
                        <div class="play-detail-label">Type</div>
                        <div class="play-detail-value" id="lastPlayType">-</div>
                    </div>
                </div>
            </div>

            <div class="stats-section">
                <div class="team-stats">
                    <div class="stats-title" id="teamStatsTitle">Team Stats</div>
                    <div class="stat-row">
                        <span class="stat-label">Total Yards</span>
                        <span class="stat-value" id="teamTotalYards">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">Rushing Yards</span>
                        <span class="stat-value" id="teamRushingYards">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">Passing Yards</span>
                        <span class="stat-value" id="teamPassingYards">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">First Downs</span>
                        <span class="stat-value" id="teamFirstDowns">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">Turnovers</span>
                        <span class="stat-value" id="teamTurnovers">0</span>
                    </div>
                </div>

                <div class="team-stats">
                    <div class="stats-title" id="opponentStatsTitle">Opponent Stats</div>
                    <div class="stat-row">
                        <span class="stat-label">Total Yards</span>
                        <span class="stat-value" id="opponentTotalYards">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">Rushing Yards</span>
                        <span class="stat-value" id="opponentRushingYards">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">Passing Yards</span>
                        <span class="stat-value" id="opponentPassingYards">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">First Downs</span>
                        <span class="stat-value" id="opponentFirstDowns">0</span>
                    </div>
                    <div class="stat-row">
                        <span class="stat-label">Turnovers</span>
                        <span class="stat-value" id="opponentTurnovers">0</span>
                    </div>
                </div>
            </div>
        </div>

        <div id="errorMessage" class="error" style="display: none;"></div>
    </div>

    <script>
        let ws = null;
        let reconnectAttempts = 0;
        const maxReconnectAttempts = 5;
        const reconnectDelay = 3000;

        // Load saved IP address
        document.addEventListener('DOMContentLoaded', () => {
            const savedIP = localStorage.getItem('footballStatsIP');
            if (savedIP) {
                document.getElementById('serverIP').value = savedIP;
            }
        });

        function connect() {
            const serverIP = document.getElementById('serverIP').value.trim();
            if (!serverIP) {
                showError('Please enter iPad IP address');
                return;
            }

            // Save IP address for next time
            localStorage.setItem('footballStatsIP', serverIP);
            
            // Validate IP format
            const ipPattern = /^(\d{1,3}\.){3}\d{1,3}$/;
            if (!ipPattern.test(serverIP)) {
                showError('Invalid IP address format');
                return;
            }

            connectToServer(serverIP);
        }

        function connectToServer(serverIP) {
            const wsUrl = `ws://${serverIP}:8080`;
            updateConnectionStatus('connecting', 'Connecting...');
            
            try {
                if (ws) {
                    ws.close();
                }

                ws = new WebSocket(wsUrl);
                
                ws.onopen = () => {
                    console.log('Connected to pressbox');
                    updateConnectionStatus('connected', 'Connected');
                    reconnectAttempts = 0;
                    hideError();
                    document.getElementById('gameInfo').textContent = `Connected to ${serverIP}`;
                };
                
                ws.onmessage = (event) => {
                    try {
                        const gameData = JSON.parse(event.data);
                        updateDisplay(gameData);
                    } catch (error) {
                        console.error('Error parsing game data:', error);
                    }
                };
                
                ws.onclose = () => {
                    console.log('Disconnected from pressbox');
                    updateConnectionStatus('disconnected', 'Disconnected');
                    attemptReconnect(serverIP);
                };
                
                ws.onerror = (error) => {
                    console.error('WebSocket error:', error);
                    showError(`Connection error. Check iPad IP and ensure broadcasting is started.`);
                    updateConnectionStatus('disconnected', 'Connection Failed');
                };
                
            } catch (error) {
                console.error('Failed to create WebSocket connection:', error);
                showError('Failed to connect to pressbox.');
                updateConnectionStatus('disconnected', 'Failed');
            }
        }

        function attemptReconnect(serverIP) {
            if (reconnectAttempts < maxReconnectAttempts) {
                reconnectAttempts++;
                updateConnectionStatus('connecting', `Reconnecting... (${reconnectAttempts}/${maxReconnectAttempts})`);
                
                setTimeout(() => {
                    connectToServer(serverIP);
                }, reconnectDelay);
            } else {
                showError('Lost connection to pressbox. Check that broadcasting is still running on iPad.');
                updateConnectionStatus('disconnect
